<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ML for Data Management</title>
    <link>https://MLxDB.github.io/</link>
      <atom:link href="https://MLxDB.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>ML for Data Management</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://MLxDB.github.io/media/icon_hu977496d800f0d840e643bbe9854d61d3_17236_512x512_fill_lanczos_center_3.png</url>
      <title>ML for Data Management</title>
      <link>https://MLxDB.github.io/</link>
    </image>
    
    <item>
      <title>Example Event</title>
      <link>https://MLxDB.github.io/event/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/event/example/</guid>
      <description>&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including page elements such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The RLR-Tree: A Reinforcement Learning Based R-Tree for Spatial Data</title>
      <link>https://MLxDB.github.io/publication/sigmod23-rlr-tree/</link>
      <pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/publication/sigmod23-rlr-tree/</guid>
      <description>&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learned Index Benefits: Machine Learning Based Index Performance Estimation</title>
      <link>https://MLxDB.github.io/publication/vldb23-index/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/publication/vldb23-index/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Towards Designing and Learning Piecewise Space-Filling Curves</title>
      <link>https://MLxDB.github.io/publication/vldb24-sfc/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/publication/vldb24-sfc/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paper on Learned R-tree accepted at SIGMOD 2023</title>
      <link>https://MLxDB.github.io/post/22-11-15-sigmod-23/</link>
      <pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/post/22-11-15-sigmod-23/</guid>
      <description>&lt;p&gt;Congratulations to Gu Tu for publishing the paper &amp;ldquo;Effectively Learning Spatial Indexes with a Support for Updates&amp;rdquo; at SIGMOD 2023.&lt;/p&gt;
&lt;p&gt;Learned indices have been proposed to replace classic index structures
like B-Tree with machine learning (ML) models. They require
to replace both the indices and query processing algorithms currently
deployed by the databases, and such a radical departure is
likely to encounter challenges and obstacles. In contrast, we propose
a fundamentally different way of using ML techniques to build
a better R-Tree without the need to change the structure or query
processing algorithms of traditional R-Tree. Specifically, we develop
reinforcement learning (RL) based models to decide how to choose
a subtree for insertion and how to split a node when building and
updating an R-Tree, instead of relying on hand-crafted heuristic
rules currently used by the R-Tree and its variants. Experiments on
real and synthetic datasets with up to more than 100 million spatial
objects show that our RL based index outperforms the R-Tree and
its variants in terms of query processing time.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Paper on Learned Index Selection accepted at VLDB 2023</title>
      <link>https://MLxDB.github.io/post/22-08-15-vldb-23/</link>
      <pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/post/22-08-15-vldb-23/</guid>
      <description>&lt;p&gt;Congratulations to Shi Jiachen for publishing the paper &amp;ldquo;Learned Index Benefits: Machine Learning Based Index Performance Estimation&amp;rdquo; at VLDB 2023.&lt;/p&gt;
&lt;p&gt;Index selection remains one of the most challenging problems in
relational database management systems. To find an optimum index configuration for a workload, accurately and efficiently quantifying
the benefits of each candidate index configuration is indispensable. As
materializing each index configuration candidate and physically executing
queries are infeasible, most of index tuners rely on the cost
estimations from optimizer with &amp;ldquo;what-if&amp;rdquo; API. However, &amp;ldquo;what-if&amp;rdquo;
based index benefit estimations have the following two limitations.
Firstly, they generate significant errors, which compromise index
recommendation quality. Secondly, generating query plans and
benefit estimations for each candidate index configuration takes
a considerable amount of time. To address the two challenges in
index selection, we propose an effective end-to-end machine learning
based index benefit estimator. In particular, we propose novel feature
extraction and encoding techniques that do not rely on &amp;ldquo;what-if&amp;rdquo;
call to generate query plan for each index configuration candidate.
In addition, we design an attention mechanism to address index
interaction issue and aggregate the impacts of different query operations.
Finally, we leverage transfer learning technique to improve
the estimatorâ€™s learning ability for adaption to new database. Comprehensive experiments are conducted on different workloads, and
extensive experimental results show that our proposed method
outperforms &amp;ldquo;what-if&amp;rdquo; based index benefit estimations in terms of
accuracy and efficiency. In addition, integrating our method into
existing index selection algorithms can significantly improve index
recommendation quality.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SAM: Database Generation from Query Workloads with Supervised Autoregressive Models</title>
      <link>https://MLxDB.github.io/publication/sigmod22-sam/</link>
      <pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/publication/sigmod22-sam/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paper on database generation accepted at SIGMOD 2022</title>
      <link>https://MLxDB.github.io/post/22-03-09-sigmod-22/</link>
      <pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/post/22-03-09-sigmod-22/</guid>
      <description>&lt;p&gt;Congratulations to Yang Jingyi and Wu Peizhi for publishing the paper &amp;ldquo;SAM: Database Generation from Query Workloads with Supervised Autoregressive Models&amp;rdquo; at SIGMOD 2022.&lt;/p&gt;
&lt;p&gt;With the prevalence of cloud databases, database users are increasingly reliant on the cloud database providers to manage their data. It becomes a challenge for cloud providers to benchmark different DBMS for a specific database instance without having access to the underlying data. One viable solution is to leverage a query workload, which contains a set of queries and the corresponding cardinalities, to generate a synthetic database with similar query performance. Existing methods for database generation with cardinality constraints, however, can only handle very small query workloads due to their high complexity and encounter challenges when handling join queries. In this work, we propose SAM, a supervised deep autoregressive model-based method for database generation from query workloads. First, SAM is able to process large-scale query workloads efficiently as its complexity is linear in the size of the query workload, the number of attributes and the attribute domain size. Second, we develop algorithms to obtain unbiased samples of base relations from the deep autoregressive model and assign join keys in a way that accurately recovers the full outer join of the target database. Comprehensive experiments on real-world datasets demonstrate that SAM is able to efficiently generate a high-fidelity database that not only satisfies the input cardinality constraints, but also is close to the target database.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Paper on Query Plan Representation accepted at VLDB 2022</title>
      <link>https://MLxDB.github.io/post/22-03-01-vldb-22/</link>
      <pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/post/22-03-01-vldb-22/</guid>
      <description>&lt;p&gt;Congratulations to Zhao Yue and Shi Jiachen for publishing the paper &amp;ldquo;QueryFormer: A Tree Transformer Model for Query Plan
Representation&amp;rdquo; at VLDB 2022.&lt;/p&gt;
&lt;p&gt;Machine learning has become a prominent method in many database optimization problems such as cost estimation, index selection and query optimization. Translating query execution plans into their vectorized representations is non-trivial. Recently, several query plan representation methods have been proposed. However, they have two limitations. First, they do not fully utilize readily available database statistics in the representation, which characterizes the data distribution. Second, they typically have difficulty in modeling long paths of information flow in a query plan, and capturing parent-children dependency between operators.&lt;/p&gt;
&lt;p&gt;To tackle these limitations, we propose QueryFormer, a learning-based
query plan representation model with a tree-structured Transformer architecture. In particular, we propose a novel scheme to integrate histograms obtained from database systems into query plan encoding. In addition, to effectively capture the information flow following the tree structure of a query plan, we develop a tree-structured model with the attention mechanism. We integrate QueryFormer into four machine learning models, each for a database optimization task, and experimental results show that QueryFormer is able to improve performance of these models significantly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QueryFormer: a tree transformer model for query plan representation</title>
      <link>https://MLxDB.github.io/publication/vldb22-query-former/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/publication/vldb22-query-former/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unsupervised Selectivity Estimation by Integrating Gaussian Mixture Models and an Autoregressive Model</title>
      <link>https://MLxDB.github.io/publication/edbt22/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/publication/edbt22/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Unified Deep Model of Learning from both Data and Queries for Cardinality Estimation</title>
      <link>https://MLxDB.github.io/publication/sigmod21-uae/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/publication/sigmod21-uae/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://MLxDB.github.io/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/admin/config.yml</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://MLxDB.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://MLxDB.github.io/people/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/people/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tour</title>
      <link>https://MLxDB.github.io/tour/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://MLxDB.github.io/tour/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
